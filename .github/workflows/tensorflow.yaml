name: tensorflow

on:
  push:
    paths:
      - .github/workflows/tensorflow.yaml
      - tensorflow/**
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  tf2_15:
    defaults:
      run:
        working-directory: tensorflow
    runs-on: ubuntu-latest
    steps:
      - uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: install cuda
        run: |
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
          sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
          wget https://developer.download.nvidia.com/compute/cuda/12.5.0/local_installers/cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb
          sudo dpkg -i cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb
          sudo cp /var/cuda-repo-ubuntu2204-12-5-local/cuda-*-keyring.gpg /usr/share/keyrings/
          sudo apt-get update
          sudo apt-get -y install cuda-toolkit-12-5
          rm -rf cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb

      - name: install cudann
        run: |
          wget https://developer.download.nvidia.com/compute/redist/cudnn/v8.8.0/local_installers/12.0/cudnn-local-repo-ubuntu2204-8.8.0.121_1.0-1_amd64.deb
          sudo dpkg -i cudnn-local-repo-ubuntu2204-8.8.0.121_1.0-1_amd64.deb
          sudo cp /var/cudnn-local-repo-ubuntu2204-8.8.0.121/cudnn-*-keyring.gpg /usr/share/keyrings/
          sudo apt-get update
          sudo apt-get -y install libcudnn8-dev
          rm -rf cudnn-local-repo-ubuntu2204-8.8.0.121_1.0-1_amd64.deb

      - run: git clone --recurse-submodules --depth=1 -b v2.15.1 https://github.com/tensorflow/tensorflow
        working-directory: tensorflow

      - name: setup bazel remote cache
        run: |
          cat ../../bazel/with-buildbuddy/.bazelrc >> .bazelrc
          BUILDBUDDY_API=${{ secrets.BUILDBUDDY_API }} envsubst < .bazelrc | tee .bazelrc.new
          mv -f .bazelrc.new .bazelrc
        working-directory: tensorflow/tensorflow

      - run: bazel build //tensorflow/tools/pip_package:build_pip_package --repo_env=WHEEL_NAME=tensorflow --config=cuda --config=ci
        working-directory: tensorflow/tensorflow

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && github.event_name == 'workflow_dispatch' }}
        timeout-minutes: 30

  tf2_16:
    defaults:
      run:
        working-directory: tensorflow
    runs-on: ubuntu-latest
    steps:
      - uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: install cuda
        run: |
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
          sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
          wget https://developer.download.nvidia.com/compute/cuda/12.5.0/local_installers/cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb
          sudo dpkg -i cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb
          sudo cp /var/cuda-repo-ubuntu2204-12-5-local/cuda-*-keyring.gpg /usr/share/keyrings/
          sudo apt-get update
          sudo apt-get -y install cuda-toolkit-12-5
          rm -rf cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb

      - name: install cudann
        run: |
          wget https://developer.download.nvidia.com/compute/redist/cudnn/v8.8.0/local_installers/12.0/cudnn-local-repo-ubuntu2204-8.8.0.121_1.0-1_amd64.deb
          sudo dpkg -i cudnn-local-repo-ubuntu2204-8.8.0.121_1.0-1_amd64.deb
          sudo cp /var/cudnn-local-repo-ubuntu2204-8.8.0.121/cudnn-*-keyring.gpg /usr/share/keyrings/
          sudo apt-get update
          sudo apt-get -y install libcudnn8-dev
          rm -rf cudnn-local-repo-ubuntu2204-8.8.0.121_1.0-1_amd64.deb

      - run: git clone --recurse-submodules --depth=1 -b v2.16.1 https://github.com/tensorflow/tensorflow
        working-directory: tensorflow

      - name: setup bazel remote cache
        run: |
          cat ../../bazel/with-buildbuddy/.bazelrc >> .bazelrc
          BUILDBUDDY_API=${{ secrets.BUILDBUDDY_API }} envsubst < .bazelrc | tee .bazelrc.new
          mv -f .bazelrc.new .bazelrc
        working-directory: tensorflow/tensorflow

      - name: patch TF_CUDA_COMPUTE_CAPABILITIES
        run: echo 'build --repo_env=TF_CUDA_COMPUTE_CAPABILITIES="sm_80,compute_90"' >> .bazelrc
        working-directory: tensorflow/tensorflow

      - run: bazel build //tensorflow/tools/pip_package:build_pip_package --repo_env=WHEEL_NAME=tensorflow --config=cuda --config=ci
        working-directory: tensorflow/tensorflow

      - run: bazel build //tensorflow/tools/pip_package:v2:wheel --repo_env=WHEEL_NAME=tensorflow --config=cuda --config=ci
        working-directory: tensorflow/tensorflow

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && github.event_name == 'workflow_dispatch' }}
        timeout-minutes: 30
